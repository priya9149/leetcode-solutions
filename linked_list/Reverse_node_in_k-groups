class Solution {
    public int len(ListNode head){
        int counter=0;
        while(head!=null){
            counter++;
            head=head.next;
        }
        return counter;
    }
    public ListNode reverseKGroup(ListNode head, int k) {
        int N=len(head);
        int groups=N/k;
        ListNode prevHead=null;
        ListNode currHead=head;
        ListNode ansNode=null;
        for(int i=0; i<groups; i++){
            ListNode prev=null;
            ListNode cur=currHead;
            ListNode nextNode=null;
            
            for(int j=0; j<k; j++){
                nextNode=cur.next;
                cur.next=prev;
                prev=cur;
                cur=nextNode;
            }
            if(prevHead==null){
                ansNode=prev;
            } else {
                prevHead.next=prev;
            }
            prevHead=currHead;
            currHead=cur;
        }
        prevHead.next=currHead;
        return ansNode;
    }
}
